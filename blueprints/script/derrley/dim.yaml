blueprint:
  name: Dim a light
  description: >-
    A script that dims a light (presumably until it is killed). Use this in
    response to a button press (or, more likely, a button press-and-hold). Kill
    it in response to a button release.
  domain: script
  input:
    light:
      name: Light to dim
      selector:
        entity:
          domain: light

mode: restart

variables:
  light: !input light
  starting_brightness: "{{ state_attr(light, 'brightness') or 0 }}"
  # Change by 2 percent, because it 
  increment: "{{ -5.0 if states(light) == 'on' else 5.0 }}"
  # There are 50 2 percent changes in 100 percent.
  count: 50
  # 100ms delay means 5 seconds to fully dim. That's what the zooz dimmers
  # default to, and seems to be a good places to start.
  delay_ms: 100

sequence:
  - repeat:
      count: "{{ count }}"
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input light
          data:
            brightness: "{{ max(1, starting_brightness + (repeat.index * increment)) }}"
        - delay:
            milliseconds: "{{ delay_ms }}"
