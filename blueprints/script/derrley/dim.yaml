blueprint:
  name: Dim a light
  description: >-
    A script that dims a light (presumably until it is killed). Use this in
    response to a button press (or, more likely, a button press-and-hold). Kill
    it in response to a button release.
  domain: script
  input:
    light:
      name: Light
      description: Which light should we dim?
      selector:
        entity:
          domain: light


mode: restart

fields:
  direction:
    name: Direction
    description: Which direction should we dim? -1 for down, 1 for up.
    default: -1
      
variables:
  light: !input light
  starting_brightness: "{{ state_attr(light, 'brightness') or 0 }}"
  # Change by 2 percent per increment.
  increment: "{{ 5.0 * direction }}" 
  # There are 50 2 percent changes in 100 percent.
  count: 50
  # 100ms delay means 5 seconds to fully dim over 2% intervals.
  delay_ms: 100

sequence:
  - repeat:
      count: "{{ count }}"
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input light
          data:
            brightness: "{{ max(1, starting_brightness + (repeat.index * increment)) }}"
        - delay:
            milliseconds: "{{ delay_ms }}"
