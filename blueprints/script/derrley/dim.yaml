blueprint:
  name: Dim a light
  description: >-
    A script that dims a light (presumably until it is killed). Use this in
    response to a button press (or, more likely, a button press-and-hold). Kill
    it in response to a button release.
  domain: script
  input:
    light:
      name: Light
      description: Which light should we dim?
      selector:
        entity:
          domain: light


mode: restart

fields:
  direction:
    name: Direction
    description: Which direction should we dim? -1 for down, 1 for up.
    default: -1
      
variables:
  light: !input light
  starting_brightness: "{{ state_attr(light, 'brightness') or 0 }}"

  # Change by 1 percent per increment.
  increment: "{{ 2.5 * direction }}" 

  # There are 100 1 percent changes in 100 percent. This makes sure the script won't run forever.
  count: 100

  # 50ms delay means 5 seconds to fully cover the entire dim range.
  delay_ms: 50

sequence:
  - repeat:
      count: "{{ count }}"
      sequence:
        - service: light.turn_on
          target:
            entity_id: !input light
          data:
            brightness: "{{ max(1, starting_brightness + (repeat.index * increment)) }}"
            color_temp_kelvin: >
                {% macro warm_dim_brightness(brightness) %}
                {{ 2240 + (4.5 * brightness) + (-0.00485 * (brightness**2))  }}
                {% endmacro %}
                {{ warm_dim_brightness(max(1, starting_brightness + (repeat.index * increment))) }}
        - delay:
            milliseconds: "{{ delay_ms }}"
