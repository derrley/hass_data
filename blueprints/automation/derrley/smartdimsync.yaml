blueprint:
  name: Smart Dim Sync
  description: |
    Link a dimmer (in smart switch mode, with its relay disabled) to a smart
    bulb. Synchronize the smart bulb's brightness based on the brightness of
    the dimmer, and visa versa (for when the smart bulb is changed through
    another mechanism, like directly in the home assistant app).

  domain: automation
  input:
    switch:
      name: Dimmer
      selector:
        entity:
          domain: light

    light:
      name: Smart Light
      selector:
        entity:
          domain: light

variables:
  switch: !input switch
  light: !input light

  entity_to_sync: "{{ light if trigger.id == 'switch_state_change' else switch }}"
  entity_to_sync_recently_changed: "{{ utcnow() - states[entity_to_sync].last_updated > timedelta(minutes=5) }}"

trigger:
  - id: light_state_change
    platform: state
    entity_id: !input light
  - id: switch_state_change
    platform: state
    entity_id: !input switch

condition: []
action:
- choose:

  - conditions: "{{ trigger.to_state.state == 'on' and not (trigger.id == 'light_state_change' and entity_to_sync_recently_changed) }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ entity_to_sync }}"
      data:
        brightness: "{{ trigger.to_state.attributes.brightness }}"

  - conditions: "{{ trigger.to_state.state == 'off' }}"
    sequence:
    - service: light.turn_off
      target:
        entity_id: "{{ entity_to_sync }}"

      data: {}

max: 25
mode: queued
trace:
  stored_traces: 20

