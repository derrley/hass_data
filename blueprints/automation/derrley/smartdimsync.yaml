blueprint:
  name: Smart Dim Sync
  description: |
    Link a dimmer (in smart switch mode, with its relay disabled) to a smart
    bulb. Synchronize the smart bulb's brightness based on the brightness of
    the dimmer, and visa versa (for when the smart bulb is changed through
    another mechanism, like directly in the home assistant app).

  domain: automation
  input:
    switch:
      name: Dimmer
      selector:
        device:
          integration: zwave_js
          manufacturer: Zooz

    light:
      name: Smart Light
      selector:
        entity:
          domain: light

    dimscript:
      name: Dim Script
      selector:
        entity:
          domain: script

variables:
  switch: !input switch
  light: !input light

  top_pressed: "{{ trigger.event.data.property_key == '001' }}"
  bottom_pressed: "{{ trigger.event.data.property_key == '002' }}"
  button_pressed: "{{ trigger.event.data.value_raw == 0 }}"
  button_released: "{{ trigger.event.data.value_raw == 1 }}"
  button_held: "{{ trigger.event.data.value_raw == 2 }}"
  button_double_pressed: "{{ trigger.event.data.value_raw == 3 }}"

  dim_direction: "{{ 1 if top_pressed else -1 }}"
  toggle_service: "{{ 'light.turn_on' if top_pressed else 'light.turn_off' }}"

trigger:
  - id: switch_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch

condition: []
action:
- choose:

  - conditions: "{{ button_pressed }}" 
    sequence:
    - service: "{{ toggle_service }}"
      target:
        entity_id: !input light
      data: {}

  - conditions: "{{ button_double_pressed and top_pressed }}" 
    sequence:
    - service: light.turn_on
      target:
        entity_id: !input light
      data:
        brightness: 255

  - conditions: "{{ button_held }}"
    sequence:
    - service: script.turn_on
      target:
        entity_id: !input dimscript
      data:
        variables:
          direction: "{{ dim_direction }}"

  - conditions: "{{ button_released }}"
    sequence:
    - service: script.turn_off
      target:
        entity_id: !input dimscript
      data: {}

max: 25
mode: queued
trace:
  stored_traces: 20
