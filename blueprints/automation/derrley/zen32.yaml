blueprint:
  name: ZEN32
  domain: automation
  input:
    switch:
      name: Scene Controller
      selector:
        device:
          integration: zwave_js
          manufacturer: Zooz
          model: ZEN32
    dimmer:
      name: Dimmer Scene Source
      default: []
      selector:
        device:
          integration: zwave_js
          manufacturer: Zooz

    main_entities:
      name: Lights Linked To Main Button
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    top_left_entities:
      name: Lights Linked To Top Left Button
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    top_right_entities:
      name: Lights Linked To Top Right Button
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    bottom_left_entities:
      name: Lights Linked To Bottom Left Button
      default: []
      selector:
        entity:
          domain: light
          multiple: true
    bottom_right_entities:
      name: Lights Linked To Bottom Right Button
      default: []
      selector:
        entity:
          domain: light
          multiple: true

    top_left_scene:
      name: Scene Linked To Top Left Button
      default: []
      selector:
        entity:
          domain: scene
          multiple: false

    top_right_scene:
      name: Scene Linked To Top Right Button
      default: []
      selector:
        entity:
          domain: scene
          multiple: false

    bottom_left_scene:
      name: Scene Linked To Bottom Left Button
      default: []
      selector:
        entity:
          domain: scene
          multiple: false

    bottom_right_scene:
      name: Scene Linked To Bottom Right Button
      default: []
      selector:
        entity:
          domain: scene
          multiple: false

variables:
  main_entities: !input main_entities
  top_left_entities: !input top_left_entities
  top_right_entities: !input top_right_entities
  bottom_left_entities: !input bottom_left_entities
  bottom_right_entities: !input bottom_right_entities
  switch: !input switch
  dimmer: !input dimmer

  single_press: "{{ trigger.event.data.value == 'KeyPressed' if trigger.platform == 'event' else None}}"
  double_press: "{{ trigger.event.data.value == 'KeyPressed2x' if trigger.platform == 'event' else None}}"
  triple_press: "{{ trigger.event.data.value == 'KeyPressed3x' if trigger.platform == 'event' else None}}"

  switch_press: "{{ trigger.event.data.device_id == switch if trigger.platform == 'event' else None}}"
  dimmer_press: "{{ trigger.event.data.device_id == dimmer if trigger.platform == 'event' else None}}"

  trigger_vars:
    main_state_change:
      entities_on: "{{ main_entities | map('states') | select('eq', 'on') | list }}"
      entities_dimmed: "{{ main_entities | map('state_attr', 'brightness') | reject('eq', None) | select('lt', 127) | list }}"
      light_color_param: 6
    main_button_press:
      entities: !input main_entities
      entities_on: "{{ main_entities | map('states') | select('eq', 'on') | list }}"
    top_left_state_change:
      entities_on: "{{ top_left_entities | map('states') | select('eq', 'on') | list }}"
      entities_dimmed: "{{ top_left_entities | map('state_attr', 'brightness') | reject('eq', None) | select('lt', 127) | list }}"
      light_color_param: 7
    top_left_button_press:
      entities: !input top_left_entities
      entities_on: "{{ top_left_entities | map('states') | select('eq', 'on') | list }}"
      scene: !input top_left_scene
    top_right_state_change:
      entities_on: "{{ top_right_entities | map('states') | select('eq', 'on') | list }}"
      entities_dimmed: "{{ top_right_entities | map('state_attr', 'brightness') | reject('eq', None) | select('lt', 127) | list }}"
      light_color_param: 8
    top_right_button_press:
      entities: !input top_right_entities
      entities_on: "{{ top_right_entities | map('states') | select('eq', 'on') | list }}"
      scene: !input top_right_scene
    bottom_left_state_change:
      entities_on: "{{ bottom_left_entities | map('states') | select('eq', 'on') | list }}"
      entities_dimmed: "{{ bottom_left_entities | map('state_attr', 'brightness') | reject('eq', None) | select('lt', 127) | list }}"
      light_color_param: 9
    bottom_left_button_press:
      entities: !input bottom_left_entities
      entities_on: "{{ bottom_left_entities | map('states') | select('eq', 'on') | list }}"
      scene: !input bottom_left_scene
    bottom_right_state_change:
      entities_on: "{{ bottom_right_entities | map('states') | select('eq', 'on') | list }}"
      entities_dimmed: "{{ bottom_right_entities | map('state_attr', 'brightness') | reject('eq', None) | select('lt', 127) | list }}"
      light_color_param: 10
    bottom_right_button_press:
      entities: !input bottom_right_entities
      entities_on: "{{ bottom_right_entities | map('states') | select('eq', 'on') | list }}"
      scene: !input bottom_right_scene
    dim_up_button_press:
      entities: "{{ main_entities | reject('is_state', 'off') | list }}"
      step: 10
    dim_down_button_press:
      entities: "{{ main_entities | reject('is_state', 'off') | list }}"
      step: -10

trigger:
  - id: main_state_change
    platform: state
    entity_id: !input main_entities
  - id: top_left_state_change
    platform: state
    entity_id: !input top_left_entities
  - id: top_right_state_change
    platform: state
    entity_id: !input top_right_entities
  - id: bottom_left_state_change
    platform: state
    entity_id: !input bottom_left_entities
  - id: bottom_right_state_change
    platform: state
    entity_id: !input bottom_right_entities

  - id: main_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch
      property_key: "005"
  - id: top_left_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch
      property_key: "001"
  - id: top_right_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch
      property_key: "002"
  - id: bottom_left_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch
      property_key: "003"
  - id: bottom_right_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input switch
      property_key: "004"

  - id: dim_up_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input dimmer
      property_key: "001"

  - id: dim_down_button_press
    platform: event
    event_type: zwave_js_value_notification
    event_data:
      device_id: !input dimmer
      property_key: "002"

condition: []
action:
- choose:

  - conditions: "{{ trigger.platform == 'state' }}"
    sequence:
    - service: zwave_js.set_config_parameter
      data:
        parameter: "{{ trigger_vars[trigger.id].light_color_param }}"
        value: "{{ iif(trigger_vars[trigger.id].entities_on, iif(trigger_vars[trigger.id].entities_dimmed, 'Blue', 'Green'), 'Red') }}"
      target:
        device_id: !input switch

  - conditions: "{{ switch_press and single_press }}"
    sequence:
    - service: "{{ iif(trigger_vars[trigger.id].entities_on, 'light.turn_off', 'light.turn_on') }}"
      target:
        entity_id: "{{ trigger_vars[trigger.id].entities }}"

  - conditions: "{{ switch_press and double_press }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ trigger_vars[trigger.id].entities }}"
      data:
        brightness: 255

  - conditions: "{{ switch_press and triple_press }}"
    sequence:
    - service: scene.turn_on
      target:
        entity_id: "{{ trigger_vars[trigger.id].scene }}"

  - conditions: "{{ dimmer_press and double_press }}"
    sequence:
    - service: light.turn_on
      target:
        entity_id: "{{ trigger_vars[trigger.id].entities }}"
      data:
        brightness_step_pct: "{{ trigger_vars[trigger.id].step }}"


mode: queued
